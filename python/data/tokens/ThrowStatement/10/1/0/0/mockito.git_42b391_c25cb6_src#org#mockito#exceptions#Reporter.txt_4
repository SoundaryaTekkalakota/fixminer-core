UPD ThrowStatement@@ClassInstanceCreation:new MockitoException(join("Invalid argument index for the current invocation of method : "," -> " + new MockUtil().getMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()","",(willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation),"The index need to be a positive number that indicates a valid position of the argument in the invocation.","However it is possible to use the -1 value to indicates that the last argument should be returned.","")) @TO@ ClassInstanceCreation:new MockitoException(join("Invalid argument index for the current invocation of method : "," -> " + safelyGetMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()","",(willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation),"The index need to be a positive number that indicates a valid position of the argument in the invocation.","However it is possible to use the -1 value to indicates that the last argument should be returned.","")) @AT@ 32264 @LENGTH@ 801
---UPD ClassInstanceCreation@@MockitoException[join("Invalid argument index for the current invocation of method : "," -> " + new MockUtil().getMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()","",(willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation),"The index need to be a positive number that indicates a valid position of the argument in the invocation.","However it is possible to use the -1 value to indicates that the last argument should be returned.","")] @TO@ MockitoException[join("Invalid argument index for the current invocation of method : "," -> " + safelyGetMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()","",(willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation),"The index need to be a positive number that indicates a valid position of the argument in the invocation.","However it is possible to use the -1 value to indicates that the last argument should be returned.","")] @AT@ 32270 @LENGTH@ 794
------UPD MethodInvocation@@join("Invalid argument index for the current invocation of method : "," -> " + new MockUtil().getMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()","",(willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation),"The index need to be a positive number that indicates a valid position of the argument in the invocation.","However it is possible to use the -1 value to indicates that the last argument should be returned.","") @TO@ join("Invalid argument index for the current invocation of method : "," -> " + safelyGetMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()","",(willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation),"The index need to be a positive number that indicates a valid position of the argument in the invocation.","However it is possible to use the -1 value to indicates that the last argument should be returned.","") @AT@ 32308 @LENGTH@ 755
---------UPD SimpleName@@MethodName:join:["Invalid argument index for the current invocation of method : ", " -> " + new MockUtil().getMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()", "", (willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation), "The index need to be a positive number that indicates a valid position of the argument in the invocation.", "However it is possible to use the -1 value to indicates that the last argument should be returned.", ""] @TO@ MethodName:join:["Invalid argument index for the current invocation of method : ", " -> " + safelyGetMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()", "", (willReturnLastParameter ? "Last parameter wanted" : "Wanted parameter at position " + argumentIndex) + " but " + possibleArgumentTypesOf(invocation), "The index need to be a positive number that indicates a valid position of the argument in the invocation.", "However it is possible to use the -1 value to indicates that the last argument should be returned.", ""] @AT@ 32308 @LENGTH@ 755
------------UPD InfixExpression@@" -> " + new MockUtil().getMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()" @TO@ " -> " + safelyGetMockName(invocation.getMock()) + "."+ invocation.getMethod().getName()+ "()" @AT@ 32403 @LENGTH@ 105
---------------UPD MethodInvocation@@new MockUtil().getMockName(invocation.getMock()) @TO@ safelyGetMockName(invocation.getMock()) @AT@ 32412 @LENGTH@ 48
------------------DEL ClassInstanceCreation@@MockUtil[] @AT@ 32412 @LENGTH@ 14
---------------------DEL New@@new @AT@ 32412 @LENGTH@ 3
---------------------DEL SimpleType@@MockUtil @AT@ 32416 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:getMockName:[invocation.getMock()] @TO@ MethodName:safelyGetMockName:[invocation.getMock()] @AT@ 32427 @LENGTH@ 33

