UPD VariableDeclarationStatement@@PrivilegedAction<Void> privilegedAction=new PrivilegedAction<Void>(){
  @Override public Void run(){
    if (phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue() != null) {
      ROOT_LOGGER.stoppingPersistenceUnitService(2,pu.getScopedPersistenceUnitName());
    }
 else {
      ROOT_LOGGER.stoppingService("Persistence Unit",pu.getScopedPersistenceUnitName());
    }
    ClassLoader old=Thread.currentThread().getContextClassLoader();
    Thread.currentThread().setContextClassLoader(classLoader);
    if (javaNamespaceSetup != null) {
      javaNamespaceSetup.setup(Collections.<String,Object>emptyMap());
    }
    try {
      if (entityManagerFactory != null) {
        WritableServiceBasedNamingStore.pushOwner(deploymentUnitServiceName);
        try {
          if (entityManagerFactory.isOpen()) {
            entityManagerFactory.close();
          }
        }
 catch (        Throwable t) {
          ROOT_LOGGER.failedToStopPUService(t,pu.getScopedPersistenceUnitName());
        }
 finally {
          entityManagerFactory=null;
          pu.setTempClassLoaderFactory(null);
          WritableServiceBasedNamingStore.popOwner();
          persistenceUnitRegistry.remove(getScopedPersistenceUnitName());
        }
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(old);
      if (javaNamespaceSetup != null) {
        javaNamespaceSetup.teardown(Collections.<String,Object>emptyMap());
      }
    }
    if (proxyBeanManager != null) {
      proxyBeanManager.setDelegate(null);
      proxyBeanManager=null;
    }
    context.complete();
    return null;
  }
}
; @TO@ PrivilegedAction<Void> privilegedAction=new PrivilegedAction<Void>(){
  @Override public Void run(){
    if (phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue() != null) {
      ROOT_LOGGER.stoppingPersistenceUnitService(2,pu.getScopedPersistenceUnitName());
    }
 else {
      ROOT_LOGGER.stoppingService("Persistence Unit",pu.getScopedPersistenceUnitName());
    }
    ClassLoader old=Thread.currentThread().getContextClassLoader();
    Thread.currentThread().setContextClassLoader(classLoader);
    if (javaNamespaceSetup != null) {
      javaNamespaceSetup.setup(Collections.<String,Object>emptyMap());
    }
    try {
      if (entityManagerFactory != null) {
synchronized (this) {
          if (entityManagerFactory != null) {
            WritableServiceBasedNamingStore.pushOwner(deploymentUnitServiceName);
            try {
              if (entityManagerFactory.isOpen()) {
                entityManagerFactory.close();
              }
            }
 catch (            Throwable t) {
              ROOT_LOGGER.failedToStopPUService(t,pu.getScopedPersistenceUnitName());
            }
 finally {
              entityManagerFactory=null;
              pu.setTempClassLoaderFactory(null);
              WritableServiceBasedNamingStore.popOwner();
              persistenceUnitRegistry.remove(getScopedPersistenceUnitName());
            }
          }
        }
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(old);
      if (javaNamespaceSetup != null) {
        javaNamespaceSetup.teardown(Collections.<String,Object>emptyMap());
      }
    }
    if (proxyBeanManager != null) {
synchronized (this) {
        if (proxyBeanManager != null) {
          proxyBeanManager.setDelegate(null);
          proxyBeanManager=null;
        }
      }
    }
    context.complete();
    return null;
  }
}
; @AT@ 13216 @LENGTH@ 2961
---UPD VariableDeclarationFragment@@privilegedAction=new PrivilegedAction<Void>(){
  @Override public Void run(){
    if (phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue() != null) {
      ROOT_LOGGER.stoppingPersistenceUnitService(2,pu.getScopedPersistenceUnitName());
    }
 else {
      ROOT_LOGGER.stoppingService("Persistence Unit",pu.getScopedPersistenceUnitName());
    }
    ClassLoader old=Thread.currentThread().getContextClassLoader();
    Thread.currentThread().setContextClassLoader(classLoader);
    if (javaNamespaceSetup != null) {
      javaNamespaceSetup.setup(Collections.<String,Object>emptyMap());
    }
    try {
      if (entityManagerFactory != null) {
        WritableServiceBasedNamingStore.pushOwner(deploymentUnitServiceName);
        try {
          if (entityManagerFactory.isOpen()) {
            entityManagerFactory.close();
          }
        }
 catch (        Throwable t) {
          ROOT_LOGGER.failedToStopPUService(t,pu.getScopedPersistenceUnitName());
        }
 finally {
          entityManagerFactory=null;
          pu.setTempClassLoaderFactory(null);
          WritableServiceBasedNamingStore.popOwner();
          persistenceUnitRegistry.remove(getScopedPersistenceUnitName());
        }
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(old);
      if (javaNamespaceSetup != null) {
        javaNamespaceSetup.teardown(Collections.<String,Object>emptyMap());
      }
    }
    if (proxyBeanManager != null) {
      proxyBeanManager.setDelegate(null);
      proxyBeanManager=null;
    }
    context.complete();
    return null;
  }
}
 @TO@ privilegedAction=new PrivilegedAction<Void>(){
  @Override public Void run(){
    if (phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue() != null) {
      ROOT_LOGGER.stoppingPersistenceUnitService(2,pu.getScopedPersistenceUnitName());
    }
 else {
      ROOT_LOGGER.stoppingService("Persistence Unit",pu.getScopedPersistenceUnitName());
    }
    ClassLoader old=Thread.currentThread().getContextClassLoader();
    Thread.currentThread().setContextClassLoader(classLoader);
    if (javaNamespaceSetup != null) {
      javaNamespaceSetup.setup(Collections.<String,Object>emptyMap());
    }
    try {
      if (entityManagerFactory != null) {
synchronized (this) {
          if (entityManagerFactory != null) {
            WritableServiceBasedNamingStore.pushOwner(deploymentUnitServiceName);
            try {
              if (entityManagerFactory.isOpen()) {
                entityManagerFactory.close();
              }
            }
 catch (            Throwable t) {
              ROOT_LOGGER.failedToStopPUService(t,pu.getScopedPersistenceUnitName());
            }
 finally {
              entityManagerFactory=null;
              pu.setTempClassLoaderFactory(null);
              WritableServiceBasedNamingStore.popOwner();
              persistenceUnitRegistry.remove(getScopedPersistenceUnitName());
            }
          }
        }
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(old);
      if (javaNamespaceSetup != null) {
        javaNamespaceSetup.teardown(Collections.<String,Object>emptyMap());
      }
    }
    if (proxyBeanManager != null) {
synchronized (this) {
        if (proxyBeanManager != null) {
          proxyBeanManager.setDelegate(null);
          proxyBeanManager=null;
        }
      }
    }
    context.complete();
    return null;
  }
}
 @AT@ 13239 @LENGTH@ 2937

