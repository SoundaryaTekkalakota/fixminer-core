UPD VariableDeclarationStatement@@RegionServerCallable<Boolean> callable=new RegionServerCallable<Boolean>(connection,getName(),row){
  @Override public Boolean call(  int callTimeout) throws IOException {
    PayloadCarryingRpcController controller=rpcControllerFactory.newController();
    controller.setPriority(tableName);
    controller.setCallTimeout(callTimeout);
    try {
      CompareType compareType=CompareType.valueOf(compareOp.name());
      MultiRequest request=RequestConverter.buildMutateRequest(getLocation().getRegionInfo().getRegionName(),row,family,qualifier,new BinaryComparator(value),compareType,rm);
      ClientProtos.MultiResponse response=getStub().multi(controller,request);
      return Boolean.valueOf(response.getProcessed());
    }
 catch (    ServiceException se) {
      throw ProtobufUtil.getRemoteException(se);
    }
  }
}
; @TO@ RegionServerCallable<Boolean> callable=new RegionServerCallable<Boolean>(connection,getName(),row){
  @Override public Boolean call(  int callTimeout) throws IOException {
    PayloadCarryingRpcController controller=rpcControllerFactory.newController();
    controller.setPriority(tableName);
    controller.setCallTimeout(callTimeout);
    try {
      CompareType compareType=CompareType.valueOf(compareOp.name());
      MultiRequest request=RequestConverter.buildMutateRequest(getLocation().getRegionInfo().getRegionName(),row,family,qualifier,new BinaryComparator(value),compareType,rm);
      ClientProtos.MultiResponse response=getStub().multi(controller,request);
      ClientProtos.RegionActionResult res=response.getRegionActionResultList().get(0);
      if (res.hasException()) {
        Throwable ex=ProtobufUtil.toException(res.getException());
        if (ex instanceof IOException) {
          throw (IOException)ex;
        }
        throw new IOException("Failed to checkAndMutate row: " + Bytes.toStringBinary(rm.getRow()),ex);
      }
      return Boolean.valueOf(response.getProcessed());
    }
 catch (    ServiceException se) {
      throw ProtobufUtil.getRemoteException(se);
    }
  }
}
; @AT@ 49510 @LENGTH@ 1007
---UPD VariableDeclarationFragment@@callable=new RegionServerCallable<Boolean>(connection,getName(),row){
  @Override public Boolean call(  int callTimeout) throws IOException {
    PayloadCarryingRpcController controller=rpcControllerFactory.newController();
    controller.setPriority(tableName);
    controller.setCallTimeout(callTimeout);
    try {
      CompareType compareType=CompareType.valueOf(compareOp.name());
      MultiRequest request=RequestConverter.buildMutateRequest(getLocation().getRegionInfo().getRegionName(),row,family,qualifier,new BinaryComparator(value),compareType,rm);
      ClientProtos.MultiResponse response=getStub().multi(controller,request);
      return Boolean.valueOf(response.getProcessed());
    }
 catch (    ServiceException se) {
      throw ProtobufUtil.getRemoteException(se);
    }
  }
}
 @TO@ callable=new RegionServerCallable<Boolean>(connection,getName(),row){
  @Override public Boolean call(  int callTimeout) throws IOException {
    PayloadCarryingRpcController controller=rpcControllerFactory.newController();
    controller.setPriority(tableName);
    controller.setCallTimeout(callTimeout);
    try {
      CompareType compareType=CompareType.valueOf(compareOp.name());
      MultiRequest request=RequestConverter.buildMutateRequest(getLocation().getRegionInfo().getRegionName(),row,family,qualifier,new BinaryComparator(value),compareType,rm);
      ClientProtos.MultiResponse response=getStub().multi(controller,request);
      ClientProtos.RegionActionResult res=response.getRegionActionResultList().get(0);
      if (res.hasException()) {
        Throwable ex=ProtobufUtil.toException(res.getException());
        if (ex instanceof IOException) {
          throw (IOException)ex;
        }
        throw new IOException("Failed to checkAndMutate row: " + Bytes.toStringBinary(rm.getRow()),ex);
      }
      return Boolean.valueOf(response.getProcessed());
    }
 catch (    ServiceException se) {
      throw ProtobufUtil.getRemoteException(se);
    }
  }
}
 @AT@ 49540 @LENGTH@ 976

