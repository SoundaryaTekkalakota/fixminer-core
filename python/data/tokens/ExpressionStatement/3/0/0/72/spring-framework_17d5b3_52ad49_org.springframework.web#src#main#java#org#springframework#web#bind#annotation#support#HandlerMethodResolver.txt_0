UPD ExpressionStatement@@MethodInvocation:ReflectionUtils.doWithMethods(currentHandlerType,new ReflectionUtils.MethodCallback(){
  public void doWith(  Method method){
    Method specificMethod=ClassUtils.getMostSpecificMethod(method,currentHandlerType);
    if (isHandlerMethod(specificMethod)) {
      handlerMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(InitBinder.class)) {
      initBinderMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(ModelAttribute.class)) {
      modelAttributeMethods.add(specificMethod);
    }
  }
}
) @TO@ MethodInvocation:ReflectionUtils.doWithMethods(currentHandlerType,new ReflectionUtils.MethodCallback(){
  public void doWith(  Method method){
    Method specificMethod=ClassUtils.getMostSpecificMethod(method,currentHandlerType);
    if (isHandlerMethod(method)) {
      handlerMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(InitBinder.class)) {
      initBinderMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(ModelAttribute.class)) {
      modelAttributeMethods.add(specificMethod);
    }
  }
}
) @AT@ 2984 @LENGTH@ 561
---UPD MethodInvocation@@ReflectionUtils.doWithMethods(currentHandlerType,new ReflectionUtils.MethodCallback(){
  public void doWith(  Method method){
    Method specificMethod=ClassUtils.getMostSpecificMethod(method,currentHandlerType);
    if (isHandlerMethod(specificMethod)) {
      handlerMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(InitBinder.class)) {
      initBinderMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(ModelAttribute.class)) {
      modelAttributeMethods.add(specificMethod);
    }
  }
}
) @TO@ ReflectionUtils.doWithMethods(currentHandlerType,new ReflectionUtils.MethodCallback(){
  public void doWith(  Method method){
    Method specificMethod=ClassUtils.getMostSpecificMethod(method,currentHandlerType);
    if (isHandlerMethod(method)) {
      handlerMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(InitBinder.class)) {
      initBinderMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(ModelAttribute.class)) {
      modelAttributeMethods.add(specificMethod);
    }
  }
}
) @AT@ 2984 @LENGTH@ 560
------UPD SimpleName@@MethodName:doWithMethods:[currentHandlerType, new ReflectionUtils.MethodCallback(){
  public void doWith(  Method method){
    Method specificMethod=ClassUtils.getMostSpecificMethod(method,currentHandlerType);
    if (isHandlerMethod(specificMethod)) {
      handlerMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(InitBinder.class)) {
      initBinderMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(ModelAttribute.class)) {
      modelAttributeMethods.add(specificMethod);
    }
  }
}
] @TO@ MethodName:doWithMethods:[currentHandlerType, new ReflectionUtils.MethodCallback(){
  public void doWith(  Method method){
    Method specificMethod=ClassUtils.getMostSpecificMethod(method,currentHandlerType);
    if (isHandlerMethod(method)) {
      handlerMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(InitBinder.class)) {
      initBinderMethods.add(specificMethod);
    }
 else     if (method.isAnnotationPresent(ModelAttribute.class)) {
      modelAttributeMethods.add(specificMethod);
    }
  }
}
] @AT@ 3000 @LENGTH@ 544

