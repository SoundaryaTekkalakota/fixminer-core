UPD ExpressionStatement@@MethodInvocation:context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateResourceModel(operation,false);
    Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    ModelNode model=resource.getModel();
    for (    AttributeDefinition attr : ATTRIBUTES) {
      attr.validateAndSet(operation,model);
    }
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final String name=context.getCurrentAddressValue();
        final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
        ServiceController<ManagedReferenceFactory> service=(ServiceController<ManagedReferenceFactory>)context.getServiceRegistry(false).getService(bindInfo.getBinderServiceName());
        if (service == null) {
          context.reloadRequired();
          return;
        }
        NamingBindingAdd.INSTANCE.doRebind(context,operation,(BinderService)service.getService());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}
,OperationContext.Stage.MODEL) @TO@ MethodInvocation:context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    ModelNode model=resource.getModel();
    for (    AttributeDefinition attr : ATTRIBUTES) {
      attr.validateAndSet(operation,model);
    }
    context.addStep(NamingBindingResourceDefinition.VALIDATE_RESOURCE_MODEL_OPERATION_STEP_HANDLER,OperationContext.Stage.MODEL);
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final String name=context.getCurrentAddressValue();
        final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
        ServiceController<ManagedReferenceFactory> service=(ServiceController<ManagedReferenceFactory>)context.getServiceRegistry(false).getService(bindInfo.getBinderServiceName());
        if (service == null) {
          context.reloadRequired();
          return;
        }
        NamingBindingAdd.INSTANCE.doRebind(context,operation,(BinderService)service.getService());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}
,OperationContext.Stage.MODEL) @AT@ 7347 @LENGTH@ 1707
---UPD MethodInvocation@@context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateResourceModel(operation,false);
    Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    ModelNode model=resource.getModel();
    for (    AttributeDefinition attr : ATTRIBUTES) {
      attr.validateAndSet(operation,model);
    }
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final String name=context.getCurrentAddressValue();
        final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
        ServiceController<ManagedReferenceFactory> service=(ServiceController<ManagedReferenceFactory>)context.getServiceRegistry(false).getService(bindInfo.getBinderServiceName());
        if (service == null) {
          context.reloadRequired();
          return;
        }
        NamingBindingAdd.INSTANCE.doRebind(context,operation,(BinderService)service.getService());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}
,OperationContext.Stage.MODEL) @TO@ context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    ModelNode model=resource.getModel();
    for (    AttributeDefinition attr : ATTRIBUTES) {
      attr.validateAndSet(operation,model);
    }
    context.addStep(NamingBindingResourceDefinition.VALIDATE_RESOURCE_MODEL_OPERATION_STEP_HANDLER,OperationContext.Stage.MODEL);
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final String name=context.getCurrentAddressValue();
        final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
        ServiceController<ManagedReferenceFactory> service=(ServiceController<ManagedReferenceFactory>)context.getServiceRegistry(false).getService(bindInfo.getBinderServiceName());
        if (service == null) {
          context.reloadRequired();
          return;
        }
        NamingBindingAdd.INSTANCE.doRebind(context,operation,(BinderService)service.getService());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}
,OperationContext.Stage.MODEL) @AT@ 7347 @LENGTH@ 1706
------UPD SimpleName@@MethodName:addStep:[new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateResourceModel(operation,false);
    Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    ModelNode model=resource.getModel();
    for (    AttributeDefinition attr : ATTRIBUTES) {
      attr.validateAndSet(operation,model);
    }
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final String name=context.getCurrentAddressValue();
        final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
        ServiceController<ManagedReferenceFactory> service=(ServiceController<ManagedReferenceFactory>)context.getServiceRegistry(false).getService(bindInfo.getBinderServiceName());
        if (service == null) {
          context.reloadRequired();
          return;
        }
        NamingBindingAdd.INSTANCE.doRebind(context,operation,(BinderService)service.getService());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}
, OperationContext.Stage.MODEL] @TO@ MethodName:addStep:[new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    ModelNode model=resource.getModel();
    for (    AttributeDefinition attr : ATTRIBUTES) {
      attr.validateAndSet(operation,model);
    }
    context.addStep(NamingBindingResourceDefinition.VALIDATE_RESOURCE_MODEL_OPERATION_STEP_HANDLER,OperationContext.Stage.MODEL);
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final String name=context.getCurrentAddressValue();
        final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
        ServiceController<ManagedReferenceFactory> service=(ServiceController<ManagedReferenceFactory>)context.getServiceRegistry(false).getService(bindInfo.getBinderServiceName());
        if (service == null) {
          context.reloadRequired();
          return;
        }
        NamingBindingAdd.INSTANCE.doRebind(context,operation,(BinderService)service.getService());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}
, OperationContext.Stage.MODEL] @AT@ 7355 @LENGTH@ 1698

