UPD ExpressionStatement@@MethodInvocation:entity.doWithProperties(new PropertyHandler<GemfirePersistentProperty>(){
  @Override public void doWithPersistentProperty(  GemfirePersistentProperty persistentProperty){
    if (entity.isConstructorArgument(persistentProperty)) {
      return;
    }
    PdxSerializer customSerializer=getCustomSerializer(persistentProperty.getType());
    Object value;
    if (customSerializer != null) {
      value=customSerializer.fromData(persistentProperty.getType(),reader);
    }
 else {
      value=reader.readField(persistentProperty.getName());
    }
    try {
      accessor.setProperty(persistentProperty,value);
    }
 catch (    Exception e) {
      throw new MappingException("Could not read value " + value.toString(),e);
    }
  }
}
) @TO@ MethodInvocation:entity.doWithProperties(new PropertyHandler<GemfirePersistentProperty>(){
  public void doWithPersistentProperty(  GemfirePersistentProperty persistentProperty){
    if (!entity.isConstructorArgument(persistentProperty)) {
      PdxSerializer customSerializer=getCustomSerializer(persistentProperty.getType());
      Object value=null;
      try {
        value=(customSerializer != null ? customSerializer.fromData(persistentProperty.getType(),reader) : reader.readField(persistentProperty.getName()));
        accessor.setProperty(persistentProperty,value);
      }
 catch (      Exception e) {
        throw new MappingException(String.format("Could not read and set value [%1$s] for property [%2$s]",value,persistentProperty.getName()),e);
      }
    }
  }
}
) @AT@ 5468 @LENGTH@ 755
---UPD MethodInvocation@@entity.doWithProperties(new PropertyHandler<GemfirePersistentProperty>(){
  @Override public void doWithPersistentProperty(  GemfirePersistentProperty persistentProperty){
    if (entity.isConstructorArgument(persistentProperty)) {
      return;
    }
    PdxSerializer customSerializer=getCustomSerializer(persistentProperty.getType());
    Object value;
    if (customSerializer != null) {
      value=customSerializer.fromData(persistentProperty.getType(),reader);
    }
 else {
      value=reader.readField(persistentProperty.getName());
    }
    try {
      accessor.setProperty(persistentProperty,value);
    }
 catch (    Exception e) {
      throw new MappingException("Could not read value " + value.toString(),e);
    }
  }
}
) @TO@ entity.doWithProperties(new PropertyHandler<GemfirePersistentProperty>(){
  public void doWithPersistentProperty(  GemfirePersistentProperty persistentProperty){
    if (!entity.isConstructorArgument(persistentProperty)) {
      PdxSerializer customSerializer=getCustomSerializer(persistentProperty.getType());
      Object value=null;
      try {
        value=(customSerializer != null ? customSerializer.fromData(persistentProperty.getType(),reader) : reader.readField(persistentProperty.getName()));
        accessor.setProperty(persistentProperty,value);
      }
 catch (      Exception e) {
        throw new MappingException(String.format("Could not read and set value [%1$s] for property [%2$s]",value,persistentProperty.getName()),e);
      }
    }
  }
}
) @AT@ 5468 @LENGTH@ 754
------UPD SimpleName@@MethodName:doWithProperties:[new PropertyHandler<GemfirePersistentProperty>(){
  @Override public void doWithPersistentProperty(  GemfirePersistentProperty persistentProperty){
    if (entity.isConstructorArgument(persistentProperty)) {
      return;
    }
    PdxSerializer customSerializer=getCustomSerializer(persistentProperty.getType());
    Object value;
    if (customSerializer != null) {
      value=customSerializer.fromData(persistentProperty.getType(),reader);
    }
 else {
      value=reader.readField(persistentProperty.getName());
    }
    try {
      accessor.setProperty(persistentProperty,value);
    }
 catch (    Exception e) {
      throw new MappingException("Could not read value " + value.toString(),e);
    }
  }
}
] @TO@ MethodName:doWithProperties:[new PropertyHandler<GemfirePersistentProperty>(){
  public void doWithPersistentProperty(  GemfirePersistentProperty persistentProperty){
    if (!entity.isConstructorArgument(persistentProperty)) {
      PdxSerializer customSerializer=getCustomSerializer(persistentProperty.getType());
      Object value=null;
      try {
        value=(customSerializer != null ? customSerializer.fromData(persistentProperty.getType(),reader) : reader.readField(persistentProperty.getName()));
        accessor.setProperty(persistentProperty,value);
      }
 catch (      Exception e) {
        throw new MappingException(String.format("Could not read and set value [%1$s] for property [%2$s]",value,persistentProperty.getName()),e);
      }
    }
  }
}
] @AT@ 5475 @LENGTH@ 747

