UPD ExpressionStatement@@MethodInvocation:registration.registerMetric(MIN_REQUEST_TIME,new AbstractMetricsHandler(){
  @Override void handle(  final ModelNode response,  final String name,  final MetricsHandler.MetricResult metricResult,  final ServletInfo servlet){
    response.set(metricResult.getMinRequestTime());
  }
}
) @TO@ MethodInvocation:registration.registerMetric(MIN_REQUEST_TIME,new AbstractMetricsHandler(){
  @Override void handle(  final ModelNode response,  final String name,  final MetricsHandler.MetricResult metricResult,  final ServletInfo servlet){
    response.set((long)metricResult.getMinRequestTime());
  }
}
) @AT@ 4454 @LENGTH@ 334
---UPD MethodInvocation@@registration.registerMetric(MIN_REQUEST_TIME,new AbstractMetricsHandler(){
  @Override void handle(  final ModelNode response,  final String name,  final MetricsHandler.MetricResult metricResult,  final ServletInfo servlet){
    response.set(metricResult.getMinRequestTime());
  }
}
) @TO@ registration.registerMetric(MIN_REQUEST_TIME,new AbstractMetricsHandler(){
  @Override void handle(  final ModelNode response,  final String name,  final MetricsHandler.MetricResult metricResult,  final ServletInfo servlet){
    response.set((long)metricResult.getMinRequestTime());
  }
}
) @AT@ 4454 @LENGTH@ 333
------UPD SimpleName@@MethodName:registerMetric:[MIN_REQUEST_TIME, new AbstractMetricsHandler(){
  @Override void handle(  final ModelNode response,  final String name,  final MetricsHandler.MetricResult metricResult,  final ServletInfo servlet){
    response.set(metricResult.getMinRequestTime());
  }
}
] @TO@ MethodName:registerMetric:[MIN_REQUEST_TIME, new AbstractMetricsHandler(){
  @Override void handle(  final ModelNode response,  final String name,  final MetricsHandler.MetricResult metricResult,  final ServletInfo servlet){
    response.set((long)metricResult.getMinRequestTime());
  }
}
] @AT@ 4467 @LENGTH@ 320

