UPD ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    if (resultAction == OperationContext.ResultAction.KEEP) {
      final ServiceRegistry registry=context.getServiceRegistry(false);
      final ServiceController<GracefulShutdownService> gracefulController=(ServiceController<GracefulShutdownService>)registry.getRequiredService(GracefulShutdownService.SERVICE_NAME);
      gracefulController.getValue().startGracefulShutdown();
      final ServiceController<SuspendController> suspendControllerServiceController=(ServiceController<SuspendController>)registry.getRequiredService(SuspendController.SERVICE_NAME);
      final SuspendController suspendController=suspendControllerServiceController.getValue();
      suspendController.suspend(timeout > 0 ? timeout * 1000 : timeout);
    }
  }
}
) @TO@ MethodInvocation:context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    if (resultAction == OperationContext.ResultAction.KEEP) {
      final ServiceRegistry registry=context.getServiceRegistry(false);
      final ServiceController<GracefulShutdownService> gracefulController=(ServiceController<GracefulShutdownService>)registry.getService(GracefulShutdownService.SERVICE_NAME);
      if (gracefulController != null) {
        final ServiceController<SuspendController> suspendControllerServiceController=(ServiceController<SuspendController>)registry.getService(SuspendController.SERVICE_NAME);
        if (suspendControllerServiceController != null) {
          gracefulController.getValue().startGracefulShutdown();
          suspendControllerServiceController.getValue().suspend(timeout > 0 ? timeout * 1000 : timeout);
        }
      }
    }
  }
}
) @AT@ 5075 @LENGTH@ 1363
---UPD MethodInvocation@@context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    if (resultAction == OperationContext.ResultAction.KEEP) {
      final ServiceRegistry registry=context.getServiceRegistry(false);
      final ServiceController<GracefulShutdownService> gracefulController=(ServiceController<GracefulShutdownService>)registry.getRequiredService(GracefulShutdownService.SERVICE_NAME);
      gracefulController.getValue().startGracefulShutdown();
      final ServiceController<SuspendController> suspendControllerServiceController=(ServiceController<SuspendController>)registry.getRequiredService(SuspendController.SERVICE_NAME);
      final SuspendController suspendController=suspendControllerServiceController.getValue();
      suspendController.suspend(timeout > 0 ? timeout * 1000 : timeout);
    }
  }
}
) @TO@ context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    if (resultAction == OperationContext.ResultAction.KEEP) {
      final ServiceRegistry registry=context.getServiceRegistry(false);
      final ServiceController<GracefulShutdownService> gracefulController=(ServiceController<GracefulShutdownService>)registry.getService(GracefulShutdownService.SERVICE_NAME);
      if (gracefulController != null) {
        final ServiceController<SuspendController> suspendControllerServiceController=(ServiceController<SuspendController>)registry.getService(SuspendController.SERVICE_NAME);
        if (suspendControllerServiceController != null) {
          gracefulController.getValue().startGracefulShutdown();
          suspendControllerServiceController.getValue().suspend(timeout > 0 ? timeout * 1000 : timeout);
        }
      }
    }
  }
}
) @AT@ 5075 @LENGTH@ 1362
------UPD SimpleName@@MethodName:completeStep:[new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    if (resultAction == OperationContext.ResultAction.KEEP) {
      final ServiceRegistry registry=context.getServiceRegistry(false);
      final ServiceController<GracefulShutdownService> gracefulController=(ServiceController<GracefulShutdownService>)registry.getRequiredService(GracefulShutdownService.SERVICE_NAME);
      gracefulController.getValue().startGracefulShutdown();
      final ServiceController<SuspendController> suspendControllerServiceController=(ServiceController<SuspendController>)registry.getRequiredService(SuspendController.SERVICE_NAME);
      final SuspendController suspendController=suspendControllerServiceController.getValue();
      suspendController.suspend(timeout > 0 ? timeout * 1000 : timeout);
    }
  }
}
] @TO@ MethodName:completeStep:[new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    if (resultAction == OperationContext.ResultAction.KEEP) {
      final ServiceRegistry registry=context.getServiceRegistry(false);
      final ServiceController<GracefulShutdownService> gracefulController=(ServiceController<GracefulShutdownService>)registry.getService(GracefulShutdownService.SERVICE_NAME);
      if (gracefulController != null) {
        final ServiceController<SuspendController> suspendControllerServiceController=(ServiceController<SuspendController>)registry.getService(SuspendController.SERVICE_NAME);
        if (suspendControllerServiceController != null) {
          gracefulController.getValue().startGracefulShutdown();
          suspendControllerServiceController.getValue().suspend(timeout > 0 ? timeout * 1000 : timeout);
        }
      }
    }
  }
}
] @AT@ 5083 @LENGTH@ 1354

