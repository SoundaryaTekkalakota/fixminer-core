UPD MethodDeclaration@@public, double[], MethodName:fit,  @TO@ public, double[], MethodName:fit, double[] initialGuess,  @AT@ 3129 @LENGTH@ 146
---DEL ReturnStatement@@MethodInvocation:fit(new Gaussian.Parametric(),(new ParameterGuesser(getObservations())).guess()) @AT@ 3161 @LENGTH@ 108
------DEL MethodInvocation@@fit(new Gaussian.Parametric(),(new ParameterGuesser(getObservations())).guess()) @AT@ 3168 @LENGTH@ 100
---------DEL SimpleName@@MethodName:fit:[new Gaussian.Parametric(), (new ParameterGuesser(getObservations())).guess()] @AT@ 3168 @LENGTH@ 100
------------DEL ClassInstanceCreation@@Gaussian.Parametric[] @AT@ 3172 @LENGTH@ 25
---INS SingleVariableDeclaration@@double[] initialGuess @TO@ MethodDeclaration@@public, double[], MethodName:fit,  @AT@ 3340 @LENGTH@ 21
------INS ArrayType@@double[] @TO@ SingleVariableDeclaration@@double[] initialGuess @AT@ 3340 @LENGTH@ 8
---------INS PrimitiveType@@double @TO@ ArrayType@@double[] @AT@ 3340 @LENGTH@ 6
------INS SimpleName@@initialGuess @TO@ SingleVariableDeclaration@@double[] initialGuess @AT@ 3349 @LENGTH@ 12
---INS VariableDeclarationStatement@@final ParametricUnivariateRealFunction f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
; @TO@ MethodDeclaration@@public, double[], MethodName:fit,  @AT@ 3373 @LENGTH@ 1046
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ParametricUnivariateRealFunction f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
; @AT@ 3373 @LENGTH@ 5
------INS SimpleType@@ParametricUnivariateRealFunction @TO@ VariableDeclarationStatement@@final ParametricUnivariateRealFunction f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
; @AT@ 3379 @LENGTH@ 32
------INS VariableDeclarationFragment@@f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
 @TO@ VariableDeclarationStatement@@final ParametricUnivariateRealFunction f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
; @AT@ 3412 @LENGTH@ 1006
---------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
 @AT@ 3412 @LENGTH@ 1
---------INS ClassInstanceCreation@@ParametricUnivariateRealFunction[] @TO@ VariableDeclarationFragment@@f=new ParametricUnivariateRealFunction(){
  private final ParametricUnivariateRealFunction g=new Gaussian.Parametric();
  public double value(  double x,  double[] p){
    double v=Double.POSITIVE_INFINITY;
    try {
      v=g.value(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
  public double[] gradient(  double x,  double[] p){
    double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY};
    try {
      v=g.gradient(x,p);
    }
 catch (    NotStrictlyPositiveException e) {
    }
    return v;
  }
}
 @AT@ 3416 @LENGTH@ 1002
------------INS New@@new @TO@ ClassInstanceCreation@@ParametricUnivariateRealFunction[] @AT@ 3416 @LENGTH@ 3
------------INS SimpleType@@ParametricUnivariateRealFunction @TO@ ClassInstanceCreation@@ParametricUnivariateRealFunction[] @AT@ 3420 @LENGTH@ 32
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ParametricUnivariateRealFunction[] @AT@ 3455 @LENGTH@ 963
---------------INS FieldDeclaration@@private, final, ParametricUnivariateRealFunction, [g=new Gaussian.Parametric()] @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3473 @LENGTH@ 77
------------------INS Modifier@@private @TO@ FieldDeclaration@@private, final, ParametricUnivariateRealFunction, [g=new Gaussian.Parametric()] @AT@ 3473 @LENGTH@ 7
------------------INS Modifier@@final @TO@ FieldDeclaration@@private, final, ParametricUnivariateRealFunction, [g=new Gaussian.Parametric()] @AT@ 3481 @LENGTH@ 5
------------------INS SimpleType@@ParametricUnivariateRealFunction @TO@ FieldDeclaration@@private, final, ParametricUnivariateRealFunction, [g=new Gaussian.Parametric()] @AT@ 3487 @LENGTH@ 32
------------------INS VariableDeclarationFragment@@g=new Gaussian.Parametric() @TO@ FieldDeclaration@@private, final, ParametricUnivariateRealFunction, [g=new Gaussian.Parametric()] @AT@ 3520 @LENGTH@ 29
---------------------INS SimpleName@@g @TO@ VariableDeclarationFragment@@g=new Gaussian.Parametric() @AT@ 3520 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@Gaussian.Parametric[] @TO@ VariableDeclarationFragment@@g=new Gaussian.Parametric() @AT@ 3524 @LENGTH@ 25
------------------------MOV New@@new @TO@ ClassInstanceCreation@@Gaussian.Parametric[] @AT@ 3172 @LENGTH@ 3
------------------------MOV SimpleType@@Gaussian.Parametric @TO@ ClassInstanceCreation@@Gaussian.Parametric[] @AT@ 3176 @LENGTH@ 19
---------------INS MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3568 @LENGTH@ 341
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3568 @LENGTH@ 6
------------------INS PrimitiveType@@double @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3575 @LENGTH@ 6
------------------INS SimpleName@@MethodName:value @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3582 @LENGTH@ 5
------------------INS SingleVariableDeclaration@@double x @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3588 @LENGTH@ 8
---------------------INS PrimitiveType@@double @TO@ SingleVariableDeclaration@@double x @AT@ 3588 @LENGTH@ 6
---------------------INS SimpleName@@x @TO@ SingleVariableDeclaration@@double x @AT@ 3595 @LENGTH@ 1
------------------INS SingleVariableDeclaration@@double[] p @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3598 @LENGTH@ 10
---------------------INS ArrayType@@double[] @TO@ SingleVariableDeclaration@@double[] p @AT@ 3598 @LENGTH@ 8
------------------------INS PrimitiveType@@double @TO@ ArrayType@@double[] @AT@ 3598 @LENGTH@ 6
---------------------INS SimpleName@@p @TO@ SingleVariableDeclaration@@double[] p @AT@ 3607 @LENGTH@ 1
------------------INS VariableDeclarationStatement@@double v=Double.POSITIVE_INFINITY; @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3632 @LENGTH@ 36
---------------------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double v=Double.POSITIVE_INFINITY; @AT@ 3632 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@v=Double.POSITIVE_INFINITY @TO@ VariableDeclarationStatement@@double v=Double.POSITIVE_INFINITY; @AT@ 3639 @LENGTH@ 28
------------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v=Double.POSITIVE_INFINITY @AT@ 3639 @LENGTH@ 1
------------------------INS QualifiedName@@Double.POSITIVE_INFINITY @TO@ VariableDeclarationFragment@@v=Double.POSITIVE_INFINITY @AT@ 3643 @LENGTH@ 24
---------------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 3643 @LENGTH@ 6
---------------------------INS SimpleName@@POSITIVE_INFINITY @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 3650 @LENGTH@ 17
------------------INS TryStatement@@try:[] @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3689 @LENGTH@ 172
---------------------INS ExpressionStatement@@Assignment:v=g.value(x,p) @TO@ TryStatement@@try:[] @AT@ 3719 @LENGTH@ 18
------------------------INS Assignment@@v=g.value(x,p) @TO@ ExpressionStatement@@Assignment:v=g.value(x,p) @AT@ 3719 @LENGTH@ 17
---------------------------INS SimpleName@@v @TO@ Assignment@@v=g.value(x,p) @AT@ 3719 @LENGTH@ 1
---------------------------INS Operator@@= @TO@ Assignment@@v=g.value(x,p) @AT@ 3720 @LENGTH@ 1
---------------------------INS MethodInvocation@@g.value(x,p) @TO@ Assignment@@v=g.value(x,p) @AT@ 3723 @LENGTH@ 13
------------------------------INS SimpleName@@Name:g @TO@ MethodInvocation@@g.value(x,p) @AT@ 3723 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:value:[x, p] @TO@ MethodInvocation@@g.value(x,p) @AT@ 3725 @LENGTH@ 11
---------------------------------INS SimpleName@@x @TO@ SimpleName@@MethodName:value:[x, p] @AT@ 3731 @LENGTH@ 1
---------------------------------INS SimpleName@@p @TO@ SimpleName@@MethodName:value:[x, p] @AT@ 3734 @LENGTH@ 1
---------------------INS CatchClause@@NotStrictlyPositiveException e @TO@ TryStatement@@try:[] @AT@ 3760 @LENGTH@ 101
------------------------INS SingleVariableDeclaration@@NotStrictlyPositiveException e @TO@ CatchClause@@NotStrictlyPositiveException e @AT@ 3767 @LENGTH@ 30
---------------------------INS SimpleType@@NotStrictlyPositiveException @TO@ SingleVariableDeclaration@@NotStrictlyPositiveException e @AT@ 3767 @LENGTH@ 28
---------------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NotStrictlyPositiveException e @AT@ 3796 @LENGTH@ 1
------------------INS ReturnStatement@@SimpleName:v @TO@ MethodDeclaration@@public, double, MethodName:value, double x, double[] p,  @AT@ 3882 @LENGTH@ 9
---------------------INS SimpleName@@v @TO@ ReturnStatement@@SimpleName:v @AT@ 3889 @LENGTH@ 1
---------------INS MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3927 @LENGTH@ 477
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 3927 @LENGTH@ 6
------------------INS ArrayType@@double[] @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 3934 @LENGTH@ 8
---------------------INS PrimitiveType@@double @TO@ ArrayType@@double[] @AT@ 3934 @LENGTH@ 6
------------------INS SimpleName@@MethodName:gradient @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 3943 @LENGTH@ 8
------------------INS SingleVariableDeclaration@@double x @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 3952 @LENGTH@ 8
---------------------INS PrimitiveType@@double @TO@ SingleVariableDeclaration@@double x @AT@ 3952 @LENGTH@ 6
---------------------INS SimpleName@@x @TO@ SingleVariableDeclaration@@double x @AT@ 3959 @LENGTH@ 1
------------------INS SingleVariableDeclaration@@double[] p @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 3962 @LENGTH@ 10
---------------------INS ArrayType@@double[] @TO@ SingleVariableDeclaration@@double[] p @AT@ 3962 @LENGTH@ 8
------------------------INS PrimitiveType@@double @TO@ ArrayType@@double[] @AT@ 3962 @LENGTH@ 6
---------------------INS SimpleName@@p @TO@ SingleVariableDeclaration@@double[] p @AT@ 3971 @LENGTH@ 1
------------------INS VariableDeclarationStatement@@double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY}; @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 3996 @LENGTH@ 164
---------------------INS ArrayType@@double[] @TO@ VariableDeclarationStatement@@double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY}; @AT@ 3996 @LENGTH@ 8
------------------------INS PrimitiveType@@double @TO@ ArrayType@@double[] @AT@ 3996 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @TO@ VariableDeclarationStatement@@double[] v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY}; @AT@ 4005 @LENGTH@ 154
------------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @AT@ 4005 @LENGTH@ 1
------------------------INS ArrayInitializer@@{Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @TO@ VariableDeclarationFragment@@v={Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @AT@ 4009 @LENGTH@ 150
---------------------------INS QualifiedName@@Double.POSITIVE_INFINITY @TO@ ArrayInitializer@@{Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @AT@ 4011 @LENGTH@ 24
------------------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 4011 @LENGTH@ 6
------------------------------INS SimpleName@@POSITIVE_INFINITY @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 4018 @LENGTH@ 17
---------------------------INS QualifiedName@@Double.POSITIVE_INFINITY @TO@ ArrayInitializer@@{Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @AT@ 4072 @LENGTH@ 24
------------------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 4072 @LENGTH@ 6
------------------------------INS SimpleName@@POSITIVE_INFINITY @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 4079 @LENGTH@ 17
---------------------------INS QualifiedName@@Double.POSITIVE_INFINITY @TO@ ArrayInitializer@@{Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY} @AT@ 4133 @LENGTH@ 24
------------------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 4133 @LENGTH@ 6
------------------------------INS SimpleName@@POSITIVE_INFINITY @TO@ QualifiedName@@Double.POSITIVE_INFINITY @AT@ 4140 @LENGTH@ 17
------------------INS TryStatement@@try:[] @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 4181 @LENGTH@ 175
---------------------INS ExpressionStatement@@Assignment:v=g.gradient(x,p) @TO@ TryStatement@@try:[] @AT@ 4211 @LENGTH@ 21
------------------------INS Assignment@@v=g.gradient(x,p) @TO@ ExpressionStatement@@Assignment:v=g.gradient(x,p) @AT@ 4211 @LENGTH@ 20
---------------------------INS SimpleName@@v @TO@ Assignment@@v=g.gradient(x,p) @AT@ 4211 @LENGTH@ 1
---------------------------INS Operator@@= @TO@ Assignment@@v=g.gradient(x,p) @AT@ 4212 @LENGTH@ 1
---------------------------INS MethodInvocation@@g.gradient(x,p) @TO@ Assignment@@v=g.gradient(x,p) @AT@ 4215 @LENGTH@ 16
------------------------------INS SimpleName@@Name:g @TO@ MethodInvocation@@g.gradient(x,p) @AT@ 4215 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:gradient:[x, p] @TO@ MethodInvocation@@g.gradient(x,p) @AT@ 4217 @LENGTH@ 14
---------------------------------INS SimpleName@@x @TO@ SimpleName@@MethodName:gradient:[x, p] @AT@ 4226 @LENGTH@ 1
---------------------------------INS SimpleName@@p @TO@ SimpleName@@MethodName:gradient:[x, p] @AT@ 4229 @LENGTH@ 1
---------------------INS CatchClause@@NotStrictlyPositiveException e @TO@ TryStatement@@try:[] @AT@ 4255 @LENGTH@ 101
------------------------INS SingleVariableDeclaration@@NotStrictlyPositiveException e @TO@ CatchClause@@NotStrictlyPositiveException e @AT@ 4262 @LENGTH@ 30
---------------------------INS SimpleType@@NotStrictlyPositiveException @TO@ SingleVariableDeclaration@@NotStrictlyPositiveException e @AT@ 4262 @LENGTH@ 28
---------------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NotStrictlyPositiveException e @AT@ 4291 @LENGTH@ 1
------------------INS ReturnStatement@@SimpleName:v @TO@ MethodDeclaration@@public, double[], MethodName:gradient, double x, double[] p,  @AT@ 4377 @LENGTH@ 9
---------------------INS SimpleName@@v @TO@ ReturnStatement@@SimpleName:v @AT@ 4384 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:fit(f,initialGuess) @TO@ MethodDeclaration@@public, double[], MethodName:fit,  @AT@ 4429 @LENGTH@ 28
------INS MethodInvocation@@fit(f,initialGuess) @TO@ ReturnStatement@@MethodInvocation:fit(f,initialGuess) @AT@ 4436 @LENGTH@ 20
---------INS SimpleName@@MethodName:fit:[f, initialGuess] @TO@ MethodInvocation@@fit(f,initialGuess) @AT@ 4436 @LENGTH@ 20
------------INS SimpleName@@f @TO@ SimpleName@@MethodName:fit:[f, initialGuess] @AT@ 4440 @LENGTH@ 1
------------INS SimpleName@@initialGuess @TO@ SimpleName@@MethodName:fit:[f, initialGuess] @AT@ 4443 @LENGTH@ 12

